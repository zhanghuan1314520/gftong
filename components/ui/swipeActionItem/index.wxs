function sizeReady(newValue, oldValue, ownerInstance, instance) {
    var state = instance.getState();
    state.position = JSON.parse(newValue);
    if (!state.position || state.position.length === 0) return;;
    var show = state.position[(0)].show;
    state.left = state.left || state.position[(0)].left;
    if (show) {
        openState(true, instance, ownerInstance)
    } else {
        openState(false, instance, ownerInstance)
    }
};

function touchstart(e, ins) {
    var instance = e.instance;
    var state = instance.getState();
    var pageX = e.touches[(0)].pageX;
    instance.removeClass('ani');
    var owner = ins.selectAllComponents('.button-hock');
    for (var i = 0; i < owner.length; i++) {
        owner[((nt_3 = (i), null == nt_3 ? undefined : 'number' === typeof nt_3 ? nt_3 : "" + nt_3))].removeClass('ani')
    };
    state.left = state.left || state.position[(0)].left;
    state.width = pageX - state.left;
    ins.callMethod('closeSwipe')
};

function touchmove(e, ownerInstance) {
    var instance = e.instance;
    var disabled = instance.getDataset().disabled;
    var state = instance.getState();
    disabled = (typeof disabled === 'string' ? JSON.parse(disabled) : disabled) || false;
    if (disabled) return;;
    var pageX = e.touches[(0)].pageX;
    move(pageX - state.width, instance, ownerInstance)
};

function touchend(e, ownerInstance) {
    var instance = e.instance;
    var disabled = instance.getDataset().disabled;
    var state = instance.getState();
    disabled = (typeof disabled === 'string' ? JSON.parse(disabled) : disabled) || false;
    if (disabled) return;;
    moveDirection(state.left, -40, instance, ownerInstance)
};

function move(value, instance, ownerInstance) {
    var state = instance.getState();
    var x = Math.max(-state.position[(1)].width, Math.min(value, 0));
    state.left = x;
    instance.setStyle(({
        transform: 'translateX(' + x + 'px)',
        '-webkit-transform': 'translateX(' + x + 'px)',
    }));
    buttonFold(x, instance, ownerInstance)
};

function moveDirection(left, value, ins, ownerInstance) {
    var state = ins.getState();
    var position = state.position;
    var isopen = state.isopen;
    if (!position[(1)].width) {
        openState(false, ins, ownerInstance);
        return
    };
    if (isopen) {
        if (-left <= position[(1)].width) {
            openState(false, ins, ownerInstance)
        } else {
            openState(true, ins, ownerInstance)
        };
        return
    };
    if (left <= value) {
        openState(true, ins, ownerInstance)
    } else {
        openState(false, ins, ownerInstance)
    }
};

function buttonFold(value, instance, ownerInstance) {
    var ins = ownerInstance.selectAllComponents('.button-hock');
    var state = instance.getState();
    var position = state.position;
    var arr = [];
    var w = 0;
    for (var i = 0; i < ins.length; i++) {
        if (!ins[((nt_9 = (i), null == nt_9 ? undefined : 'number' === typeof nt_9 ? nt_9 : "" + nt_9))].getDataset().button) return;;
        var btnData = JSON.parse(ins[((nt_10 = (i), null == nt_10 ? undefined : 'number' === typeof nt_10 ? nt_10 : "" + nt_10))].getDataset().button);
        if (typeof btnData === 'string') {
            btnData = JSON.parse(btnData)
        };
        var button = (btnData[((nt_11 = (i), null == nt_11 ? undefined : 'number' === typeof nt_11 ? nt_11 : "" + nt_11))] && btnData[((nt_12 = (i), null == nt_12 ? undefined : 'number' === typeof nt_12 ? nt_12 : "" + nt_12))].width) || 0;
        w += button;
        arr.push(-w);
        var distance = arr[((nt_13 = (i - 1), null == nt_13 ? undefined : 'number' === typeof nt_13 ? nt_13 : "" + nt_13))] + value * (arr[((nt_14 = (i - 1), null == nt_14 ? undefined : 'number' === typeof nt_14 ? nt_14 : "" + nt_14))] / position[(1)].width);
        if (i != 0) {
            ins[((nt_16 = (i), null == nt_16 ? undefined : 'number' === typeof nt_16 ? nt_16 : "" + nt_16))].setStyle(({
                transform: 'translateX(' + distance + 'px)',
            }))
        }
    }
};

function openState(type, ins, ownerInstance) {
    var state = ins.getState();
    var position = state.position;
    if (state.isopen === undefined) {
        state.isopen = false
    };
    if (state.isopen !== type) {
        ownerInstance.callMethod('change', ({
            open: type,
        }))
    };
    state.isopen = type;
    ins.addClass('ani');
    var owner = ownerInstance.selectAllComponents('.button-hock');
    for (var i = 0; i < owner.length; i++) {
        owner[((nt_17 = (i), null == nt_17 ? undefined : 'number' === typeof nt_17 ? nt_17 : "" + nt_17))].addClass('ani')
    };
    move(type ? -position[(1)].width : 0, ins, ownerInstance)
};
module.exports = ({
    sizeReady: sizeReady,
    touchstart: touchstart,
    touchmove: touchmove,
    touchend: touchend,
});